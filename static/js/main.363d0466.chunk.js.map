{"version":3,"sources":["components/card/card.jsx","components/card-list/cardlist.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeHolder","Handle","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,G,kBAAO,SAAAC,GAEhB,OAAO,sBAAKC,UAAY,iBAAjB,UACH,qBAAKC,IAAK,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJbC,EAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAA0BA,QAAUA,GAAvBA,EAAQC,UCJhDM,G,MAAS,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAYC,EAAY,EAAZA,OAChC,OAAO,uBAAOC,KAAK,SACnBb,UAAY,SACZc,YAAaH,EACbI,SAAYH,MC0BDI,E,kDA3Bb,aACC,IAAD,8BACE,gBACKC,MAAQ,CACXT,SAAW,GACXU,YAAc,IAJlB,E,gEAOoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAWe,S,+BAGlC,IAAD,SACyBE,KAAKR,MAA7BT,EADD,EACCA,SAASU,EADV,EACUA,YACVQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAClD,OACE,sBAAK5B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAQW,YAAa,kBAAkBC,OAAU,SAAAkB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WAC5F,cAAC,EAAD,CAAUxB,SAAYkB,W,GAvBZO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.363d0466.chunk.js","sourcesContent":["import React  from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n\r\n    return <div className = 'card-container'>\r\n        <img alt =\"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n           </div>\r\n};","import React from 'react';\r\nimport './cardlist.css';\r\nimport {Card} from '../card/card'\r\n\r\nexport const CardList = props => {\r\n\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (<Card key = {monster.id}  monster ={monster}/>))}\r\n            </div>\r\n};","import React from 'react';\r\nimport './search.css';\r\n\r\nexport const Search = ({placeHolder,Handle}) => {\r\n    return <input type='search' \r\n    className = 'search'\r\n    placeholder={placeHolder}\r\n    onChange = {Handle}/>\r\n}","import './App.css';\nimport React , {Component }from 'react';\nimport {CardList} from './components/card-list/cardlist'\nimport {Search} from './components/search/search'\n\nclass App extends Component\n{ constructor()\n  {\n    super();\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      <div className=\"App\">\n        <h1>Monsters Inc</h1>\n        <Search placeHolder= 'Search monsters' Handle = {e => this.setState({searchField : e.target.value})}/>\n        <CardList monsters = {filteredMonsters} />      \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}